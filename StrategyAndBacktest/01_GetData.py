# Based on uqer.io. Later I'll make a version with Quandl so there will be no reliance on 3rd party platform.
## This is a tipical api format for Uqer
## Caution: 参数field内的值不要有空格
DATA = DataAPI.MktEqudGet(secID=u"",ticker=['600388','002377','601988','600624','601088','000858'],tradeDate=u"",beginDate=u"20180101",endDate=u"20190724",field=u"secID,secShortName,tradeDate,closePrice,ticker",pandas="1")

## 数据以长表的形式给出,这是非常理想的
DATA.head(6)
#>	secID	secShortName	tradeDate	closePrice	ticker
#>0	000858.XSHE	五粮液	2018-01-02	80.58	000858
#>1	000858.XSHE	五粮液	2018-01-03	80.90	000858
#>2	000858.XSHE	五粮液	2018-01-04	82.99	000858
#>3	000858.XSHE	五粮液	2018-01-05	82.68	000858
#>4	000858.XSHE	五粮液	2018-01-08	82.20	000858

## 使用pandas的pivot()方法可以快速基于closePrice进行数据旋转
DATA = DATA.pivot(index='tradeDate',columns='ticker',values='closePrice')
#>ticker	   000858	002377	600388	600624	601088	601988
#>tradeDate						
#>2018-01-02	80.58	10.24	17.12	6.76	23.81	3.98
#>2018-01-03	80.90	10.27	17.53	6.83	23.31	4.00
#>2018-01-04	82.99	10.23	17.32	6.80	23.09	4.00
#>2018-01-05	82.68	10.29	16.92	6.85	23.66	3.98
#>2018-01-08	82.20	10.03	16.63	6.80	25.08	4.01
#>2018-01-09	86.10	9.72	16.72	6.86	24.79	3.96

## 对数据进行Z标准化
for i in ['000858','002377','600388','600624','601088','601988']:
    DATA[i] = (DATA[i] - DATA[i].mean()) / DATA[i].std()
DATA.head(6)
#>ticker	    000858	    002377	    600388	    600624	    601088	    601988
#>tradeDate						
#>2018-01-02	0.202001	2.693439	2.375596	-0.192253	1.738882	0.771775
#>2018-01-03	0.218227	2.712951	2.578980	-0.167021	1.496036	0.850468
#>2018-01-04	0.324206	2.686934	2.474807	-0.177835	1.389183	0.850468
#>2018-01-05	0.308486	2.725960	2.276384	-0.159811	1.666028	0.771775
#>2018-01-08	0.284147	2.556849	2.132527	-0.177835	2.355712	0.889814
#>2018-01-09	0.481905	2.355216	2.177172	-0.156207	2.214861	0.693081

## 标准化后可以对数据绘制频数分布图
DATA.plot.hist(bins=100)

## 绘制boxplot
_ = DATA.boxplot(sym='rs')
## 交易价格有大量异常值,建议对数化处理再Z标准化



